<?php

/*


























 SOFTWARE.
 *
 *            */

/**
 *  * PropelLogger.
 *   *
 *    * @author Fabien Potencier <fabien.potencier@symfony-project.com>
 *     * @author William Durand <william.durand1@gmail.com>
 *      */
class PropelLogger implements \BasicLogger
{

  /**
   *      * {@inheritdoc}
   *           */
  public function log($message, $severity = null)
  {
    if (null !== $this->logger) {
      $message = is_string($message) ? $message : var_export($message, true);

      switch ($severity) {
      case 'alert':
        $this->logger->alert($message);
        break;
      case 'crit':
        $this->logger->critical($message);
        break;
      case 'err':
        $this->logger->error($message);
        break;
      case 'warning':
        $this->logger->warning($message);
        break;
      case 'notice':
        $this->logger->notice($message);
        break;
      case 'info':
        $this->logger->info($message);
        break;
      case 'debug':
      default:
        $this->logger->debug($message);
      }
    }
  }

  /**
   *      * Returns queries.
   *           *
   *                * @return array Queries
   *                     */
  public function getQueries()
  {
    return $this->queries;
  }
}


